{
    "explorer.confirmDragAndDrop": false,
    "explorer.autoReveal": false,
    "editor.lineNumbers": "relative",
    "editor.fontFamily": "SauceCodePro Nerd Font",
    "editor.tabCompletion": "on",
    "editor.fontLigatures": true,
    "editor.linkedEditing": true,
    "editor.minimap.enabled": false,
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "editor.suggest.showStatusBar": true,
    "editor.tabSize": 2,
    "editor.suggestSelection": "first",
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    // The default syntax (TextMate) highlighter classifies many tokens as variables and these are now (since VSCode 1.43) resolved into namespaces, classes, parameters, and so on. This is called Semantic highlighting support for TypeScript and JavaScript. But many themes and language extensions seem broken with single-colored syntax. This came as a surprise to me. It's set `true` by default. I recommend disabling this for now.
    "editor.semanticHighlighting.enabled": false,
    "editor.formatOnSaveMode": "modificationsIfAvailable",
    "editor.bracketPairColorization.enabled": true,
    "editor.inlineSuggest.enabled": true,
    "editor.fontWeight": "400",
    "editor.cursorStyle": "line",
    "editor.cursorWidth": 2,
    "editor.cursorBlinking": "smooth",
    "editor.cursorSmoothCaretAnimation": true,
    "editor.renderWhitespace": "all",
    "editor.snippetSuggestions": "top",
    "editor.glyphMargin": false,
    "editor.codeActionsOnSave": {
        "source.fixAll.eslint": true,
        "source.fixAll": true,
        "source.organizeImports": true
    },
    "search.showLineNumbers": true,
    "search.smartCase": true,
    // Formatting Optional.
    "[typescript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[typescriptreact]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[python]": {
        "editor.defaultFormatter": "ms-python.python",
        "editor.formatOnPaste": false,
        "editor.formatOnSaveMode": "file"
    },
    "[html]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[c]": {
        "editor.defaultFormatter": "ms-vscode.cpptools"
    },
    "[cpp]": {
        "editor.defaultFormatter": "ms-vscode.cpptools"
    },
    "[json]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "terminal.integrated.fontWeight": 2,
    "terminal.integrated.fontFamily": "SauceCodePro Nerd Font Mono",
    "terminal.integrated.tabs.enabled": true,
    "terminal.integrated.profiles.windows": {
        "PowerShell": {
            "source": "PowerShell",
            "icon": "terminal-powershell"
        },
        "Command Prompt": {
            "path": [
                "${env:windir}\\Sysnative\\cmd.exe",
                "${env:windir}\\System32\\cmd.exe"
            ],
            "args": [],
            "icon": "terminal-cmd"
        },
        "Git Bash": {
            "source": "Git Bash"
        },
        "Windows PowerShell": {
            "path": "C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"
        }
    },
    "terminal.integrated.defaultProfile.windows": "PowerShell",
    "workbench.editor.pinnedTabSizing": "compact",
    "workbench.editor.enablePreview": false,
    "workbench.iconTheme": "vscode-icons",
    "workbench.startupEditor": "none",
    "workbench.editorAssociations": {
        "*.ipynb": "jupyter-notebook"
    },
    "workbench.colorTheme": "Dracula",
    // "workbench.colorCustomizations": {
    //   "terminal.background": "#F5F5F5",
    //   "terminal.foreground": "#303030",
    //   "terminalCursor.background": "#303030",
    //   "terminalCursor.foreground": "#303030",
    //   "terminal.ansiBlack": "#F5F5F5",
    //   "terminal.ansiBlue": "#6A9FB5",
    //   "terminal.ansiBrightBlack": "#B0B0B0",
    //   "terminal.ansiBrightBlue": "#6A9FB5",
    //   "terminal.ansiBrightCyan": "#75B5AA",
    //   "terminal.ansiBrightGreen": "#90A959",
    //   "terminal.ansiBrightMagenta": "#AA759F",
    //   "terminal.ansiBrightRed": "#AC4142",
    //   "terminal.ansiBrightWhite": "#151515",
    //   "terminal.ansiBrightYellow": "#F4BF75",
    //   "terminal.ansiCyan": "#75B5AA",
    //   "terminal.ansiGreen": "#90A959",
    //   "terminal.ansiMagenta": "#AA759F",
    //   "terminal.ansiRed": "#AC4142",
    //   "terminal.ansiWhite": "#303030",
    //   "terminal.ansiYellow": "#F4BF75"
    // },
    "files.eol": "\n",
    "files.trimTrailingWhitespace": true,
    "files.trimFinalNewlines": true,
    "files.associations": {
        "*.html": "html"
    },
    "javascript.updateImportsOnFileMove.enabled": "always",
    "python.defaultInterpreterPath": "C:\\Users\\Admin\\.pyenv\\pyenv-win\\shims\\python",
    "python.linting.pylintArgs": [
        "--extension-pkg-whitelist=pygame" // comma separated
    ],
    "python.languageServer": "Default",
    "jupyter.askForKernelRestart": false,
    "files.exclude": {
        "**/.classpath": true,
        "**/.project": true,
        "**/.settings": true,
        "**/.factorypath": true
    },
    "vim.smartRelativeLine": true,
    "vim.easymotion": true,
    "vim.surround": true,
    "vim.sneak": false,
    "vim.inccommand": "replace",
    "vim.incsearch": true,
    "vim.hlsearch": true,
    "vim.useSystemClipboard": true,
    "vim.useCtrlKeys": true,
    "vim.easymotionMarkerBackgroundColor": "#020202",
    "vim.leader": " ",
    // "vim.enableNeovim": true,
    // "vim.neovimConfigPath": "~/.config/nvim/init.lua",
    // "vim.neovimPath": "/usr/bin/nvim",
    // "vim.neovimUseConfigFile": true,
    // "vim.vimrc.enable": true,
    "vim.normalModeKeyBindings": [
        // {
        //     "before": ["<space>"],
        //     "commands": ["workbench.action.files.save"]
        // },
        {
            "before": ["<tab>"],
            "commands": ["workbench.action.nextEditor"]
        },
        {
            "before": ["<S-tab>"],
            "commands": ["workbench.action.previousEditor"]
        },
        {
            "before": ["<C-L>"],
            "commands": ["workbench.action.moveEditorToNextGroup"]
        },
        {
            "before": ["<C-H>"],
            "commands": ["workbench.action.moveEditorToPreviousGroup"]
        }
    ],
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": ["<C-n>"],
            "commands": [":noh"]
        },
        {
            "before": ["K"],
            "commands": ["editor.action.showHover"]
        },
        {
            "before": ["g", "r"],
            "commands": ["editor.action.rename"]
        },
        {
            "before": ["g", "D"],
            "commands": ["editor.action.goToDeclaration"]
        },
        {
            "before": ["g", "R"],
            "commands": ["editor.action.goToReferences"]
        },
        {
            "before": ["g", "I"],
            "commands": ["editor.action.goToImplementation"]
        },
        {
            "before": ["g", "T"],
            "commands": ["editor.action.goToTypeDefinition"]
        },
        {
            "before": ["<leader>", "w"],
            "commands": ["workbench.action.splitEditor"]
        },
        {
            "before": ["<leader>", "e"],
            "commands": ["workbench.action.toggleSidebarVisibility"]
        },
        {
            "before": ["<leader>", "f"],
            "commands": ["revealInExplorer"]
        },
        {
            "before": ["<leader>", "r", "f"],
            "commands": ["fileutils.renameFile"]
        },
        {
            "before": ["<C-w>"],
            "commands": ["workbench.action.closeActiveEditor"]
        }
        // {
        //     "before": ["j"],
        //     "after": ["g", "j"]
        // },
        // {
        //     "before": ["k"],
        //     "after": ["g", "k"]
        // }
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "before": ["<C-n>"],
            "commands": [":noh"]
        },
        {
            "before": ["<S-.>"],
            "commands": [">", "g", "v"]
        },
        {
            "before": ["<S-,"],
            "commands": ["<", "g", "v"]
        },
        {
            "before": ["<C-w>"],
            "commands": ["workbench.action.closeActiveEditor"]
        }
    ],
    "vim.insertModeKeyBindingsNonRecursive": [
        {
            "before": ["<C-n>"],
            "commands": [":noh"]
        },
        {
            "before": ["<C-w>"],
            "commands": ["workbench.action.closeActiveEditor"]
        }
    ],
    "emmet.triggerExpansionOnTab": true,
    "emmet.includeLanguages": {
        "ejs": "html",
        "javascript ": "javascriptreact"
    },
    "emmet.showSuggestionsAsSnippets": true,
    "emmet.preferences": {},
    "emmet.syntaxProfiles": {
        "html": {
            "self_closing_tag": true
        }
    },
    "eslint.run": "onType",
    "eslint.packageManager": "yarn",
    "eslint.format.enable": true,
    "eslint.enable": true,
    "prettier.tabWidth": 4,
    "vsicons.dontShowNewVersionMessage": true,
    "notebook.cellToolbarLocation": {
        "default": "right",
        "jupyter-notebook": "left"
    },
    "liveServer.settings.donotShowInfoMsg": true,
    // SOP's highlight matching tag setting.
    "highlight-matching-tag.styles": {
        "opening": {
            "full": {
                "highlight": "rgba(165, 153, 233, 0.3)"
            }
        }
    },
    // SOP's Import Cost Extension Settings.
    "importCost.largePackageColor": "#EC3A37F5",
    "importCost.mediumPackageColor": "#B362FF",
    "importCost.smallPackageColor": "#B362FF",
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    "github.copilot.enable": {
        "*": true,
        "yaml": false,
        "plaintext": false,
        "markdown": false,
        "java": true,
        "c": false
    },
    "C_Cpp.clang_format_fallbackStyle": "Google",
    "tws.highlightTrailingWhiteSpace": true,
    "cSpell.userWords": [
        "appspot",
        "devstart",
        "dotenv",
        "firebaseapp",
        "firestore",
        "getenv",
        "Hackathon",
        "jijo",
        "lemonnuggets",
        "lyffcsaver",
        "nodemon",
        "predeploy",
        "prettierrc",
        "stackoverflow",
        "vellore",
        "vite",
        "vitejs"
    ],
    "explorer.confirmDelete": false,
    "workbench.activityBar.visible": false
}
