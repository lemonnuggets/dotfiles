[core]
    editor = "nvim"
    autocrlf = false
[init]
    defaultBranch = main
[branch]
    sort = -committerdate
[push]
    autoSetupRemote = true
[color]
    branch = auto
    diff = auto
    status = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[alias]
    s = status
    co = checkout
    cob = checkout -b
    del = branch -D
    unstage = reset HEAD --
    br = branch --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) %(color:green)(%(committerdate:relative)) [%(authorname)]' --sort=-committerdate
    l = log --pretty=format:\"%C(magenta)%h%Creset | %s %C(dim green)[%an]%Creset%C(red)%d%Creset\" --abbrev-commit -30 --date=short
    ld = log --pretty=format:\"%C(magenta)%h%Creset %C(brightblue)(%ad)%Creset | %s %C(dim green)[%an]%Creset%C(red)%d%Creset \" --abbrev-commit -30 --date=short
    lg = log --pretty=format:\"%C(magenta)%h%Creset - %s %C(dim green)[%an]%Creset%C(red)%d%Creset\" --graph --date=short
    lgd = log --pretty=format:\"%C(magenta)%h%Creset %C(brightblue)(%ad)%Creset - %s %C(dim green)[%an]%Creset%C(red)%d%Creset\" --graph --date=short
    uncommit = reset --soft HEAD^
    rename-branch = "!f() { if [ -z \"$1\" ] || [ -z \"$2\" ]; then echo \"Usage: git rename-branch <old_name> <new_name>\"; return 1; fi; old_name=\"$1\"; new_name=\"$2\"; current_branch=$(git rev-parse --abbrev-ref HEAD); if [ \"$current_branch\" = \"$old_name\" ]; then echo \"You are currently on branch '$old_name'.\"; echo \"Switching to a temporary branch to rename '$old_name'.\"; git checkout -b temp-rename-branch > /dev/null 2>&1; if [ $? -ne 0 ]; then echo \"Error: Could not create temporary branch.\"; return 1; fi; fi; echo \"Renaming local branch '$old_name' to '$new_name'...\"; git branch -m \"$old_name\" \"$new_name\"; if [ $? -ne 0 ]; then echo \"Error: Could not rename local branch.\"; return 1; fi; echo \"Pushing '$new_name' to remote...\"; git push origin -u \"$new_name\"; if [ $? -ne 0 ]; then echo \"Error: Could not push new branch to remote.\"; return 1; fi; echo \"Deleting old remote branch '$old_name'...\"; git push origin --delete \"$old_name\"; if [ $? -ne 0 ]; then echo \"Warning: Could not delete old remote branch '$old_name'. You may need to delete it manually.\"; fi; if [ \"$current_branch\" = \"$old_name\" ]; then echo \"Switching back to '$new_name'...\"; git checkout \"$new_name\"; if [ $? -ne 0 ]; then echo \"Error: Could not switch back to '$new_name'.\"; return 1; fi; echo \"Deleting temporary branch 'temp-rename-branch'...\"; git branch -D temp-rename-branch; fi; echo \"Branch '$old_name' successfully renamed to '$new_name' locally and remotely.\"; }; f"
{{- if eq .chezmoi.os "linux" }}
[user]
    name = lemonnuggets
    email = 63046776+lemonnuggets@users.noreply.github.com
    signingKey = {{ .gpg.lemonnuggets }}
[commit]
    gpgsign = true
[credential]
    credentialStore = gpg
[credential "https://github.com"]
    helper =
    helper = !/usr/bin/gh auth git-credential
[credential "https://gist.github.com"]
    helper =
    helper = !/usr/bin/gh auth git-credential
{{- else if eq .chezmoi.os "darwin" }}
[user]
    name = lemonnuggets
    email = 63046776+lemonnuggets@users.noreply.github.com
    signingKey = {{ .gpg.lemonnuggets }}
[commit]
    gpgsign = true
[includeIf "gitdir:~/Development/work/"]
    path = ~/.config/git/config.work
{{- end }}

; vim: set filetype=gitconfig
